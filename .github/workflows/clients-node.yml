name: "clients/node"

defaults:
  run:
    working-directory: ./src/clients/node

on:
  workflow_call:
    secrets:
      TIGERBEETLE_NODE_PUBLISH_KEY:
        required: true
    inputs:
      version:
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Override the version for the current tag, when relevant.
      - if: inputs.version != ''
        run: |
          jq '.version="${{ inputs.version }}"' package.json > package.json-new
          mv -f package.json-new package.json

      - run: ./scripts/build.sh

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: node-binaries
          path: src/clients/node/tigerbeetle-node-*.tgz

  test_install:
    # We use self hosted runners for M1 here. See macos.yml for an explaination
    permissions:
      contents: read

    needs: build
    strategy:
      matrix:
        distro: [alpine, debian, ubuntu, fedora, rhelubi, amazonlinux, mac, mac-m1-12.6, mac-m1-13.2]

    runs-on: ${{ matrix.distro == 'mac' && 'macos-latest' || matrix.distro == 'mac-m1-12.6' && 'macos-12.6' || matrix.distro == 'mac-m1-13.2' && 'macos-13.2' || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: node-binaries
          path: src/clients/node

      - run: ./scripts/test_install_on_${{ matrix.distro == 'mac' && 'host' || matrix.distro == 'mac-m1-12.6' && 'host' || matrix.distro == 'mac-m1-13.2' && 'host' || matrix.distro }}.sh
        env:
          SKIP_NODE_BUILD: true

# Disable version check for now, as it basically requires us to bump version in package.json for every chage.
# Now that Github enforces that our CI is green, that becomes very painful.
#
#  version_check:
#    needs: [test_install]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - run: npm install && ./scripts/version_check.sh

  publish:
    if: inputs.version != ''
    needs: [samples_integration_test, docs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: node-binaries
          path: src/clients/node

      - run: scripts/publish.sh
        env:
          TIGERBEETLE_NODE_PUBLISH_KEY: ${{ secrets.TIGERBEETLE_NODE_PUBLISH_KEY }}

  samples_integration_test:
    timeout-minutes: 20

    if: inputs.version != ''

    needs: build
    strategy:
      matrix:
        # Windows not yet supported.
        os: [ubuntu-latest, macos-latest, [self-hosted, ARM64, macos-12.6], [self-hosted, ARM64, macos-13.2]]
        sample: [basic, two-phase]

    defaults:
      run:
        working-directory: ${{ github.workspace }}

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: node-binaries
          path: src/clients/node

      # Grab Zig
      - run: ./scripts/install.${{ matrix.os == 'windows-latest' && 'bat' || 'sh' }}

      - run: ./scripts/build.${{ matrix.os == 'windows-latest' && 'bat' || 'sh' }} client_integration
      - run: ./zig-out/bin/client_integration${{ matrix.os == 'windows-latest' && '.exe' || '' }} --language node --sample ${{ matrix.sample }}

  docs:
    timeout-minutes: 20

    strategy:
      matrix:
        # Windows not yet supported.
        os: [ubuntu-latest, macos-latest, [self-hosted, ARM64, macos-12.6], [self-hosted, ARM64, macos-13.2]]

    defaults:
      run:
        working-directory: ${{ github.workspace }}

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      # Grab Zig
      - run: ./scripts/install.${{ matrix.os == 'windows-latest' && 'bat' || 'sh' }}

      - run: ./scripts/build.${{ matrix.os == 'windows-latest' && 'bat' || 'sh' }} client_docs
      - run: ./zig-out/bin/client_docs${{ matrix.os == 'windows-latest' && '.exe' || '' }} --language node ${{ inputs.version == '' && '--no-validate' || '' }}

      - if: matrix.os == 'ubuntu-latest'
        run: ./scripts/fail_on_diff.sh
